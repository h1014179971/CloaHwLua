//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AppConstWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AppConst), typeof(System.Object));
		L.RegFunction("New", _CreateAppConst);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("DebugMode", get_DebugMode, set_DebugMode);
		L.RegVar("SimulateMode", get_SimulateMode, set_SimulateMode);
		L.RegConstant("LuaByteMode", 0);
		L.RegVar("LuaBundleMode", get_LuaBundleMode, set_LuaBundleMode);
		L.RegVar("LuaBundleModeEditMode", get_LuaBundleModeEditMode, set_LuaBundleModeEditMode);
		L.RegVar("CheckUpdate", get_CheckUpdate, set_CheckUpdate);
		L.RegVar("LuaBaseBundle", get_LuaBaseBundle, null);
		L.RegVar("LuaUpdateBundle", get_LuaUpdateBundle, null);
		L.RegVar("LuaBundlePrefix", get_LuaBundlePrefix, null);
		L.RegVar("LuaBundles", get_LuaBundles, set_LuaBundles);
		L.RegVar("GameFrameRate", get_GameFrameRate, set_GameFrameRate);
		L.RegVar("AppName", get_AppName, null);
		L.RegVar("ExtName", get_ExtName, null);
		L.RegVar("VersionFileName", get_VersionFileName, null);
		L.RegVar("CDNUrl", get_CDNUrl, set_CDNUrl);
		L.RegVar("BakCDNUrl", get_BakCDNUrl, set_BakCDNUrl);
		L.RegVar("VersionHttpUrl", get_VersionHttpUrl, null);
		L.RegVar("BakVersionHttpUrl", get_BakVersionHttpUrl, null);
		L.RegVar("AppDownloadUrl", get_AppDownloadUrl, null);
		L.RegVar("ServerListUrl", get_ServerListUrl, null);
		L.RegVar("KEY_BASE_APK_VERSION", get_KEY_BASE_APK_VERSION, set_KEY_BASE_APK_VERSION);
		L.RegVar("KEY_APK_BUILD_VERSION", get_KEY_APK_BUILD_VERSION, set_KEY_APK_BUILD_VERSION);
		L.RegVar("KEY_APP_CURRENT_VERSION", get_KEY_APP_CURRENT_VERSION, set_KEY_APP_CURRENT_VERSION);
		L.RegVar("KEY_CACHE_HOTFIX_VERSION", get_KEY_CACHE_HOTFIX_VERSION, set_KEY_CACHE_HOTFIX_VERSION);
		L.RegConstant("AUTO_DOWNLOAD_SIZE", 2048);
		L.RegVar("SplashVideoName", get_SplashVideoName, null);
		L.RegVar("StoryVideoName", get_StoryVideoName, null);
		L.RegVar("AssetPath", get_AssetPath, null);
		L.RegVar("CachePath", get_CachePath, null);
		L.RegVar("UpdateCachePath", get_UpdateCachePath, null);
		L.RegVar("DataPath", get_DataPath, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAppConst(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				AppConst obj = new AppConst();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: AppConst.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DebugMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.DebugMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SimulateMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.SimulateMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaBundleMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.LuaBundleMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaBundleModeEditMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.LuaBundleModeEditMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CheckUpdate(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, AppConst.CheckUpdate);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaBaseBundle(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.LuaBaseBundle);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaUpdateBundle(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.LuaUpdateBundle);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaBundlePrefix(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.LuaBundlePrefix);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaBundles(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, AppConst.LuaBundles);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GameFrameRate(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, AppConst.GameFrameRate);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AppName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.AppName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExtName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ExtName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VersionFileName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.VersionFileName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CDNUrl(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.CDNUrl);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BakCDNUrl(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.BakCDNUrl);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VersionHttpUrl(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.VersionHttpUrl);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BakVersionHttpUrl(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.BakVersionHttpUrl);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AppDownloadUrl(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.AppDownloadUrl);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerListUrl(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.ServerListUrl);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_KEY_BASE_APK_VERSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.KEY_BASE_APK_VERSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_KEY_APK_BUILD_VERSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.KEY_APK_BUILD_VERSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_KEY_APP_CURRENT_VERSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.KEY_APP_CURRENT_VERSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_KEY_CACHE_HOTFIX_VERSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.KEY_CACHE_HOTFIX_VERSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SplashVideoName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.SplashVideoName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StoryVideoName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.StoryVideoName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AssetPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.AssetPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CachePath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.CachePath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UpdateCachePath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.UpdateCachePath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DataPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, AppConst.DataPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DebugMode(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			AppConst.DebugMode = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SimulateMode(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			AppConst.SimulateMode = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LuaBundleMode(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			AppConst.LuaBundleMode = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LuaBundleModeEditMode(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			AppConst.LuaBundleModeEditMode = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CheckUpdate(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			AppConst.CheckUpdate = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LuaBundles(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			AppConst.LuaBundles = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GameFrameRate(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			AppConst.GameFrameRate = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CDNUrl(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			AppConst.CDNUrl = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BakCDNUrl(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			AppConst.BakCDNUrl = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_KEY_BASE_APK_VERSION(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			AppConst.KEY_BASE_APK_VERSION = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_KEY_APK_BUILD_VERSION(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			AppConst.KEY_APK_BUILD_VERSION = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_KEY_APP_CURRENT_VERSION(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			AppConst.KEY_APP_CURRENT_VERSION = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_KEY_CACHE_HOTFIX_VERSION(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			AppConst.KEY_CACHE_HOTFIX_VERSION = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

